{"ast":null,"code":"import _objectSpread from\"E:/Derick/Projects/waste-management/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:null,loading:true};const authReducer=(state,action)=>{switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,loading:false});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,token:null,loading:false});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{user:state.user?_objectSpread(_objectSpread({},state.user),action.payload):null});default:return state;}};const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{// Check for existing token on app load\nconst initializeAuth=()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){try{const user=JSON.parse(userData);dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}catch(error){// Token is invalid, clear storage\nlocalStorage.removeItem('token');localStorage.removeItem('user');dispatch({type:'LOGOUT'});}}else{dispatch({type:'SET_LOADING',payload:false});}};initializeAuth();},[]);const login=(email,password)=>{dispatch({type:'SET_LOADING',payload:true});return new Promise(resolve=>{// Mock login - simulate successful login with demo user\nsetTimeout(()=>{const mockUser={_id:'1',name:'Demo User',email:email,role:'citizen',points:150,phone:'+1234567890',status:'active',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};const mockToken='demo-token-'+Date.now();localStorage.setItem('token',mockToken);localStorage.setItem('user',JSON.stringify(mockUser));dispatch({type:'LOGIN_SUCCESS',payload:{user:mockUser,token:mockToken}});resolve();},1000);// Simulate network delay\n});};const register=userData=>{dispatch({type:'SET_LOADING',payload:true});return new Promise(resolve=>{// Mock registration - simulate successful registration\nsetTimeout(()=>{const mockUser={_id:Date.now().toString(),name:userData.name,email:userData.email,role:userData.role||'citizen',points:0,phone:userData.phone||'',status:'active',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};const mockToken='demo-token-'+Date.now();localStorage.setItem('token',mockToken);localStorage.setItem('user',JSON.stringify(mockUser));dispatch({type:'LOGIN_SUCCESS',payload:{user:mockUser,token:mockToken}});resolve();},1000);// Simulate network delay\n});};const logout=()=>{// Clear localStorage\nlocalStorage.removeItem('token');localStorage.removeItem('user');dispatch({type:'LOGOUT'});};const updateUser=userData=>{dispatch({type:'UPDATE_USER',payload:userData});// Update localStorage\nif(state.user){const updatedUser=_objectSpread(_objectSpread({},state.user),userData);localStorage.setItem('user',JSON.stringify(updatedUser));}};const value={user:state.user,token:state.token,login,register,logout,loading:state.loading,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","initialState","user","token","loading","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","initializeAuth","localStorage","getItem","userData","JSON","parse","error","removeItem","login","email","password","Promise","resolve","setTimeout","mockUser","_id","name","role","points","phone","status","createdAt","Date","toISOString","updatedAt","mockToken","now","setItem","stringify","register","toString","logout","updateUser","updatedUser","value","Provider","useAuth","context","Error"],"sources":["E:/Derick/Projects/waste-management/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthContextType, RegisterData } from '../types';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n}\n\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> };\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: true,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Check for existing token on app load\n    const initializeAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = (email: string, password: string): Promise<void> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    return new Promise((resolve) => {\n      // Mock login - simulate successful login with demo user\n      setTimeout(() => {\n        const mockUser: User = {\n          _id: '1',\n          name: 'Demo User',\n          email: email,\n          role: 'citizen',\n          points: 150,\n          phone: '+1234567890',\n          status: 'active',\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        \n        const mockToken = 'demo-token-' + Date.now();\n        \n        localStorage.setItem('token', mockToken);\n        localStorage.setItem('user', JSON.stringify(mockUser));\n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user: mockUser, token: mockToken } });\n        resolve();\n      }, 1000); // Simulate network delay\n    });\n  };\n\n  const register = (userData: RegisterData): Promise<void> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    return new Promise((resolve) => {\n      // Mock registration - simulate successful registration\n      setTimeout(() => {\n        const mockUser: User = {\n          _id: Date.now().toString(),\n          name: userData.name,\n          email: userData.email,\n          role: userData.role || 'citizen',\n          points: 0,\n          phone: userData.phone || '',\n          status: 'active',\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        \n        const mockToken = 'demo-token-' + Date.now();\n        \n        localStorage.setItem('token', mockToken);\n        localStorage.setItem('user', JSON.stringify(mockUser));\n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user: mockUser, token: mockToken } });\n        resolve();\n      }, 1000); // Simulate network delay\n    });\n  };\n\n  const logout = (): void => {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData: Partial<User>): void => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n    \n    // Update localStorage\n    if (state.user) {\n      const updatedUser = { ...state.user, ...userData };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n\n  const value: AuthContextType = {\n    user: state.user,\n    token: state.token,\n    login,\n    register,\n    logout,\n    loading: state.loading,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}