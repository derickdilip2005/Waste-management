{"ast":null,"code":"import _objectSpread from\"E:/Derick/Projects/waste-management/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{authAPI}from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:null,loading:true};const authReducer=(state,action)=>{switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,loading:false});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,token:null,loading:false});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{user:state.user?_objectSpread(_objectSpread({},state.user),action.payload):null});default:return state;}};const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{// Check for existing token on app load\nconst initializeAuth=async()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){try{const user=JSON.parse(userData);dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});// Verify token is still valid\nconst response=await authAPI.getProfile();if(response.success&&response.data){dispatch({type:'UPDATE_USER',payload:response.data});}}catch(error){// Token is invalid, clear storage\nlocalStorage.removeItem('token');localStorage.removeItem('user');dispatch({type:'LOGOUT'});}}else{dispatch({type:'SET_LOADING',payload:false});}};initializeAuth();},[]);const login=async(email,password)=>{dispatch({type:'SET_LOADING',payload:true});try{const response=await authAPI.login(email,password);if(response.success&&response.data){const{user,token}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}else{throw new Error(response.error||'Login failed');}}catch(error){dispatch({type:'SET_LOADING',payload:false});throw error;}};const register=async userData=>{dispatch({type:'SET_LOADING',payload:true});try{const response=await authAPI.register(userData);if(response.success&&response.data){const{user,token}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}else{throw new Error(response.error||'Registration failed');}}catch(error){dispatch({type:'SET_LOADING',payload:false});throw error;}};const logout=async()=>{try{await authAPI.logout();}catch(error){// Continue with logout even if API call fails\nconsole.error('Logout API call failed:',error);}// Clear localStorage\nlocalStorage.removeItem('token');localStorage.removeItem('user');dispatch({type:'LOGOUT'});};const updateUser=userData=>{dispatch({type:'UPDATE_USER',payload:userData});// Update localStorage\nif(state.user){const updatedUser=_objectSpread(_objectSpread({},state.user),userData);localStorage.setItem('user',JSON.stringify(updatedUser));}};const value={user:state.user,token:state.token,login,register,logout,loading:state.loading,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsx","_jsx","initialState","user","token","loading","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","initializeAuth","localStorage","getItem","userData","JSON","parse","response","getProfile","success","data","error","removeItem","login","email","password","setItem","stringify","Error","register","logout","console","updateUser","updatedUser","value","Provider","useAuth","context"],"sources":["E:/Derick/Projects/waste-management/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthContextType, RegisterData } from '../types';\nimport { authAPI } from '../utils/api';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n}\n\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> };\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: true,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Check for existing token on app load\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n          \n          // Verify token is still valid\n          const response = await authAPI.getProfile();\n          if (response.success && response.data) {\n            dispatch({ type: 'UPDATE_USER', payload: response.data });\n          }\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    try {\n      const response = await authAPI.login(email, password);\n      \n      if (response.success && response.data) {\n        const { user, token } = response.data as { user: User; token: string };\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n      } else {\n        throw new Error(response.error || 'Login failed');\n      }\n    } catch (error: any) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterData): Promise<void> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    try {\n      const response = await authAPI.register(userData);\n      \n      if (response.success && response.data) {\n        const { user, token } = response.data as { user: User; token: string };\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n      } else {\n        throw new Error(response.error || 'Registration failed');\n      }\n    } catch (error: any) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      throw error;\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout API call failed:', error);\n    }\n    \n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData: Partial<User>): void => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n    \n    // Update localStorage\n    if (state.user) {\n      const updatedUser = { ...state.user, ...userData };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n\n  const value: AuthContextType = {\n    user: state.user,\n    token: state.token,\n    login,\n    register,\n    logout,\n    loading: state.loading,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}