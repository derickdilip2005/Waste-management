{"ast":null,"code":"var _jsxFileName = \"E:\\\\Derick\\\\Projects\\\\waste-management\\\\client\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  loading: true\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? {\n          ...state.user,\n          ...action.payload\n        } : null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    // Check for existing token on app load\n    const initializeAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user,\n              token\n            }\n          });\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = (email, password) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n\n    // Mock login - simulate successful login with demo user\n    setTimeout(() => {\n      const mockUser = {\n        id: '1',\n        name: 'Demo User',\n        email: email,\n        role: 'citizen',\n        points: 150,\n        phone: '+1234567890',\n        address: '123 Demo Street'\n      };\n      const mockToken = 'demo-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: mockUser,\n          token: mockToken\n        }\n      });\n    }, 1000); // Simulate network delay\n  };\n  const register = userData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n\n    // Mock registration - simulate successful registration\n    setTimeout(() => {\n      const mockUser = {\n        id: Date.now().toString(),\n        name: userData.name,\n        email: userData.email,\n        role: userData.role || 'citizen',\n        points: 0,\n        phone: userData.phone || '',\n        address: userData.address || ''\n      };\n      const mockToken = 'demo-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: mockUser,\n          token: mockToken\n        }\n      });\n    }, 1000); // Simulate network delay\n  };\n  const logout = () => {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n\n    // Update localStorage\n    if (state.user) {\n      const updatedUser = {\n        ...state.user,\n        ...userData\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n  const value = {\n    user: state.user,\n    token: state.token,\n    login,\n    register,\n    logout,\n    loading: state.loading,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","user","token","loading","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","initializeAuth","localStorage","getItem","userData","JSON","parse","error","removeItem","login","email","password","setTimeout","mockUser","id","name","role","points","phone","address","mockToken","Date","now","setItem","stringify","register","toString","logout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/Derick/Projects/waste-management/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthContextType, RegisterData } from '../types';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n}\n\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> };\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: true,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Check for existing token on app load\n    const initializeAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          dispatch({ type: 'LOGIN_SUCCESS', payload: { user, token } });\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = (email: string, password: string) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    // Mock login - simulate successful login with demo user\n    setTimeout(() => {\n      const mockUser: User = {\n        id: '1',\n        name: 'Demo User',\n        email: email,\n        role: 'citizen',\n        points: 150,\n        phone: '+1234567890',\n        address: '123 Demo Street'\n      };\n      \n      const mockToken = 'demo-token-' + Date.now();\n      \n      localStorage.setItem('token', mockToken);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { user: mockUser, token: mockToken } });\n    }, 1000); // Simulate network delay\n  };\n\n  const register = (userData: RegisterData): void => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    // Mock registration - simulate successful registration\n    setTimeout(() => {\n      const mockUser: User = {\n        id: Date.now().toString(),\n        name: userData.name,\n        email: userData.email,\n        role: userData.role || 'citizen',\n        points: 0,\n        phone: userData.phone || '',\n        address: userData.address || ''\n      };\n      \n      const mockToken = 'demo-token-' + Date.now();\n      \n      localStorage.setItem('token', mockToken);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { user: mockUser, token: mockToken } });\n    }, 1000); // Simulate network delay\n  };\n\n  const logout = (): void => {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData: Partial<User>): void => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n    \n    // Update localStorage\n    if (state.user) {\n      const updatedUser = { ...state.user, ...userData };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n\n  const value: AuthContextType = {\n    user: state.user,\n    token: state.token,\n    login,\n    register,\n    logout,\n    loading: state.loading,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}